
import { supabase } from '@/integrations/supabase/client';

export const useAuthRedirect = () => {
  const redirectUserByType = async (userId: string) => {
    if (!userId) {
      console.warn('‚ö†Ô∏è UserId n√£o fornecido para redirecionamento');
      return;
    }

    try {
      console.log('üîç Buscando perfil do usu√°rio:', userId);
      
      const { data: profile, error } = await supabase
        .from('profiles')
        .select('tipo')
        .eq('id', userId)
        .single();

      if (error) {
        console.error('‚ùå Erro ao buscar perfil:', error);
        // Redirecionar para dashboard como fallback
        window.location.href = '/dashboard';
        return;
      }

      if (profile) {
        console.log('‚úÖ Perfil encontrado, tipo:', profile.tipo);
        
        const currentPath = window.location.pathname;
        let targetPath = '/dashboard';

        switch (profile.tipo) {
          case 'admin':
            targetPath = '/admin';
            break;
          case 'profissional':
            targetPath = '/professional';
            break;
          case 'cliente':
          default:
            targetPath = '/dashboard';
            break;
        }

        // S√≥ navegar se n√£o estivermos j√° na p√°gina correta
        if (currentPath !== targetPath) {
          console.log(`üöÄ Navegando de ${currentPath} para ${targetPath}`);
          window.location.href = targetPath;
        } else {
          console.log(`‚úÖ J√° estamos na p√°gina correta: ${currentPath}`);
        }
      } else {
        console.log('‚ö†Ô∏è Perfil n√£o encontrado, redirecionando para dashboard');
        window.location.href = '/dashboard';
      }
    } catch (error) {
      console.error('‚ùå Erro inesperado ao buscar perfil:', error);
      window.location.href = '/dashboard';
    }
  };

  return { redirectUserByType };
};
